#user nginx;
worker_processes 1;

env JWT_SECRET;
#env JWT_SECRET_IS_BASE64_ENCODED;
env REDIS_HOST;
env REDIS_PORT;
env REDIS_DB;
env REDIS_AUTH;
env MOUNT_POINT;

events {
  worker_connections 1024;
}

http {
  default_type application/octet-stream;
  lua_package_path "/usr/local/openresty/luajit/?.lua;;";

  sendfile on;

  resolver $RESOLVER;

  access_log "/logs/access.log";

  keepalive_timeout 65;

  #gzip on;

  server {
    listen 80;

    server_name $SERVER_NAME;

    proxy_set_header X-Forwarded-For $remote_addr;

    #charset utf-8;
    #access_log logs/host.access.log main;

    #
    # Redis Configuration
    #
    # set $redhost "127.0.0.1";
    # set $redport 6379;
    # set $reddb 1;
    # set $redauth "your-redis-pass";

    #
    # Token Auth Service
    #
    location $MOUNT_POINT/auth {
        include /conf/includes/cors.conf;
        include /conf/includes/proxy.conf;
        proxy_pass $TOKEN_URL;
    }

    #
    # User Service
    #
    location $MOUNT_POINT/user {
        include /conf/includes/cors.conf;
        include /conf/includes/proxy.conf;
        proxy_pass $USER_URL;
    }

    #
    # Api service
    #
    location $MOUNT_POINT {
        include /conf/includes/cors.conf;
        access_by_lua_file /conf/includes/check.lua;

        proxy_pass $API_URL;
    }

    #location /open/ {
    #  more_set_headers "Access-Control-Allow-Headers: openId";
    #  more_set_headers "Access-Control-Expose-Headers: openId";
    #
    #  proxy_pass https://some/open/endpoint/;
    #}

    error_page  404        /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
}
